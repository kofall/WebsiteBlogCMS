@model WebsiteBlogCMS.Models.PostDetailsModel
@using WebsiteBlogCMS.Models.Validation

@{
    Layout = "~/Views/_BlogLayoutPage.cshtml";
}

<link href="~/css/style-custom.css" rel="stylesheet" />

<!-- single post -->
<section class="text-11 py-5">
    <div class="text11 py-lg-5 py-md-4">
        <div class="container">
            <div class="blog-title px-md-5">
                <h3 class="title-big">
                    @Model.Post.title
                </h3>
                <ul class="blog-list">
                    <li>
                        <p> Posted on <strong>@Model.Post.publishedAt</strong></p>
                    </li>
                    <li>
                        <p> By <a href="@Url.Action("Details", "User", new { id = Model.Post.authorId })"><strong>@WebsiteBlogCMS.Classes.DataHelper.UserUtils.GetUserName(Model.Post.authorId)</strong></a></p>
                    </li>
                    <li>
                        <p>
                            Published in
                            @foreach (var category in Model.Post.PostCategories)
                            {
                                <a href="@Url.Action("PostsOfCategory", "Post", new { id = category.categoryId })"><strong>@category.Category.title</strong></a>
                            }
                        </p>
                    </li>
                </ul>
            </div>
        </div>
        <div class="image mb-sm-5 mb-4">
            @if (Model.Post.image != null && Model.Post.image.Length > 0)
            {
                <img id="imagePreview" src="data:image/*;base64,@(Convert.ToBase64String(Model.Post.image.ToArray()))" alt="Image" class="img-fluid radius-image-full" />
            }
        </div>
        <div class="container">
            <div class="row">
                <div class="col-lg-8">
                    <div class="text11-content">
                        @Html.Raw(Model.Post.content)


                        @if (Model.Post.PostTags.Any())
                        {
                            <div class="social-share-blog mt-5">
                                <ul class="column3 tags m-0 p-0">
                                    <li>
                                        <p class="m-0 mr-sm-4 mr-2">Tagi :</p>
                                    </li>
                                    @foreach (var tag in Model.Post.PostTags)
                                    {
                                        <a href="@Url.Action("PostsOfTag", "Post", new { id = tag.tagId })" class="btn-small"><strong>@tag.Tag.title</strong></a>
                                    }
                                </ul>
                            </div>
                        }
                    </div>

                    <div class="text11-content mt-5">
                        <div class="comments">
                            <h3 class="aside-title ">Komentarze (@Model.CommentsCount)</h3>
                            <div class="comments-grids">
                                @foreach (var comment in Model.Comments.Where(x => x.parentId == null))
                                {
                                    <div class="media-grid">
                                        <div class="media">
                                            <div class="media-body comments-grid-right">
                                                <h5>
                                                    @comment.authorName
                                                    @if (comment.authorId != null)
                                                    {
                                                        var authorRole = WebsiteBlogCMS.Classes.DataHelper.UserUtils.GetUserRole((int)comment.authorId);
                                                        <span style="color: red; font-size: 0.5em;"> @authorRole.name</span>
                                                    }
                                                </h5>
                                                <ul class="p-0 comment">
                                                    <li class="">@comment.publishedAt</li>
                                                    <li>
                                                        <a href="#replyForm-@comment.id" class="text-primary reply-link-root" data-author="@comment.authorName" data-parentid="@comment.id">Odpowiedz</a>
                                                    </li>
                                                </ul>
                                                <p>
                                                    @comment.content
                                                </p>

                                                @foreach (var subComment in WebsiteBlogCMS.Classes.DataHelper.CommentUtils.GetNestedComments(comment))
                                                {
                                                    var parent = WebsiteBlogCMS.Classes.DataHelper.CommentUtils.GetComment((int)subComment.parentId);

                                                    <div class="media mt-4 mb-0 border-0 px-0 pb-0">
                                                        <div class="media-body comments-grid-right">
                                                            <h5>
                                                                @subComment.authorName
                                                                @if (subComment.authorId != null)
                                                                {
                                                                    var authorRole = WebsiteBlogCMS.Classes.DataHelper.UserUtils.GetUserRole((int)subComment.authorId);
                                                                    <span style="color: red; font-size: 0.5em;"> @authorRole.name</span>
                                                                }
                                                            </h5>
                                                            <ul class="p-0 comment">
                                                                <li class="">@subComment.publishedAt</li>
                                                                <li>
                                                                    <a href="#replyForm-@subComment.id" class="text-primary reply-link-sub" data-author="@subComment.authorName" data-parentid="@subComment.id">Odpowiedz</a>
                                                                </li>
                                                            </ul>
                                                            <p>
                                                                <span style="color: #5A67D8;">@parent.authorName</span> @subComment.content
                                                            </p>

                                                            <div class="leave-comment-form comment-form-to-hide" data-parent-id="@subComment.id" id="replyForm-@subComment.id" style="display: none;">
                                                                <div>
                                                                    @using (Html.BeginForm("LeaveComment", "Post", FormMethod.Post))
                                                                    {
                                                                        @Html.AntiForgeryToken()
                                                                        @Html.HiddenFor(m => m.CommentModel.ParentId)
                                                                        @Html.HiddenFor(m => m.Post.id)

                                                                        <div class="input-grids">
                                                                            <div class="form-group">
                                                                                @Html.TextBoxFor(m => m.CommentModel.AuthorName, new { @class = "form-control", placeholder = "Twoje imię", required = "required" })
                                                                                @Html.ValidationMessageFor(m => m.CommentModel.AuthorName, "", new { @class = "text-danger" })
                                                                            </div>
                                                                            <div class="form-group">
                                                                                @Html.TextAreaFor(m => m.CommentModel.Content, new { @class = "form-control", placeholder = "Twój komentarz", required = "required", id = "CommentModel_Content" })
                                                                                @Html.ValidationMessageFor(m => m.CommentModel.Content, "", new { @class = "text-danger" })
                                                                            </div>
                                                                        </div>
                                                                        <div class="submit text-right">
                                                                            <button type="submit" class="btn btn-style btn-primary">Odpowiedz</button>
                                                                        </div>
                                                                    }
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                }

                                                <div class="leave-comment-form comment-form-to-hide" data-parent-id="@comment.id" id="replyForm-@comment.id" style="display: none;">
                                                    <div>
                                                        @using (Html.BeginForm("LeaveComment", "Post", FormMethod.Post))
                                                        {
                                                            @Html.AntiForgeryToken()
                                                            @Html.HiddenFor(m => m.CommentModel.ParentId)
                                                            @Html.HiddenFor(m => m.Post.id)

                                                            <div class="input-grids">
                                                                <div class="form-group">
                                                                    @Html.TextBoxFor(m => m.CommentModel.AuthorName, new { @class = "form-control", placeholder = "Twoje imię", required = "required" })
                                                                    @Html.ValidationMessageFor(m => m.CommentModel.AuthorName, "", new { @class = "text-danger" })
                                                                </div>
                                                                <div class="form-group">
                                                                    @Html.TextAreaFor(m => m.CommentModel.Content, new { @class = "form-control", placeholder = "Twój komentarz", required = "required", id = "CommentModel_Content" })
                                                                    @Html.ValidationMessageFor(m => m.CommentModel.Content, "", new { @class = "text-danger" })
                                                                </div>
                                                            </div>
                                                            <div class="submit text-right">
                                                                <button type="submit" class="btn btn-style btn-primary">Odpowiedz</button>
                                                            </div>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>

                        <div class="leave-comment-form" id="comment">
                            <h3 class="aside-title">Zostaw komentarz</h3>
                            @using (Html.BeginForm("LeaveComment", "Post", FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                @Html.HiddenFor(m => m.CommentModel.ParentId)
                                @Html.HiddenFor(m => m.Post.id)

                                <div class="input-grids">
                                    <div class="form-group">
                                        @Html.TextBoxFor(m => m.CommentModel.AuthorName, new { @class = "form-control", placeholder = "Twoje imię", required = "required" })
                                        @Html.ValidationMessageFor(m => m.CommentModel.AuthorName, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">
                                        @Html.TextAreaFor(m => m.CommentModel.Content, new { @class = "form-control", placeholder = "Twój komentarz", required = "required", id = "CommentModel_Content" })
                                        @Html.ValidationMessageFor(m => m.CommentModel.Content, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="submit text-right">
                                    <button type="submit" class="btn btn-style btn-primary">Wyślij komentarz</button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="sidebar-side col-lg-4 col-md-12 col-sm-12 mt-lg-0 mt-5">
                    <aside class="sidebar">

                        <!-- Author card Widget-->
                        <div class="sidebar-widget sidebar-blog-category">
                            <div class="author">
                                <div class="sidebar-title">
                                    <h4>O autorze</h4>
                                </div>
                                <div class="author-detalis">
                                    <a href="@Url.Action("Details", "User", new { id = Model.Post.authorId })" class="author-image">
                                        @if (Model.Post.User.profileImage != null && Model.Post.User.profileImage.Length > 0)
                                        {
                                            <img id="imagePreview" src="data:image/*;base64,@(Convert.ToBase64String(Model.Post.User.profileImage.ToArray()))" alt="Image" class="img-fluid" />
                                        }
                                    </a>
                                    <div class="author-info">
                                        <a href="@Url.Action("Details", "User", new { id = Model.Post.authorId })" class="author-name">@WebsiteBlogCMS.Classes.DataHelper.UserUtils.GetUserName(Model.Post.authorId)</a>
                                    </div>
                                </div>
                                <p class="mt-2">
                                    @Model.Post.User.intro
                                </p>
                            </div>
                        </div>
                        <!-- //Author card Widget-->
                        <!--Blog Category Widget-->
                        <div class="sidebar-widget sidebar-blog-category">
                            <div class="sidebar-title">
                                <h4>Zobacz również</h4>
                            </div>
                            <ul class="blog-cat">
                                @foreach (var category in ViewBag.Categories)
                                {
                                    <li><a href="@Url.Action("PostsOfCategory", "Post", new { id = category.id })">@category.title </a></li>
                                }
                            </ul>
                        </div>


                        <!-- Popular Post Widget-->
                        <div class="sidebar-widget popular-posts">
                            <div class="sidebar-title">
                                <h4>Posty użytkownika</h4>
                            </div>

                            @if (!Model.UserPosts.Any())
                            {
                                <p>Brak innych postów.</p>
                            }
                            else
                            {
                                foreach (var post in Model.UserPosts)
                                {
                                    <article class="post">
                                        <figure class="post-thumb">
                                            @if (post.image != null && post.image.Length > 0)
                                            {
                                                <img id="imagePreview" src="data:image/*;base64,@(Convert.ToBase64String(post.image.ToArray()))" alt="Image" />
                                            }
                                        </figure>
                                        <div class="text">
                                            @Html.ActionLink($"{post.title}", "Details", "Post", new { id = post.id }, null)
                                        </div>
                                        <div class="post-info">@post.publishedAt</div>
                                    </article>
                                }
                            }
                        </div>
                    </aside>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- //single post -->


<script>
    $(document).ready(function () {
        $(".reply-link-root, .reply-link-sub").click(function () {
            $(".comment-form-to-hide").hide();

            // Get the parentId from the clicked link
            var parentId = $(this).data("parentid");

            // Toggle visibility of the corresponding reply form
            $("#replyForm-" + parentId).toggle();

            // Set the parentId in the hidden field
            $("#CommentModel_ParentId").val(parentId);

            // Scroll to the comment form (optional)
            $('html, body').animate({
                scrollTop: $("#replyForm-" + parentId).offset().top
            }, 500);

            // Focus on the comment content textarea
            $("#CommentModel_Content").focus();

            return false; // Prevent default link behavior
        });
    });
</script>